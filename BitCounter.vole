actor BitCounter {
   constructor () {};
   message count_bits(value : Integer) returns (answer : Integer) {
      return self.accumulate_bits(0, value);
   };
   method accumulate_bits(bits_so_far: Integer, value: Integer)
   returns (answer : Integer) {
      if value = 0 then {
         return bits_so_far;
      };
      if (value mod 2) = 0 then {
         return self.accumulate_bits(bits_so_far, value/2); # tail recursion
      } else {
         return self.accumulate_bits(bits_so_far+1, value/2);
      };
   };
};

actor Driver {
   constructor () {};

   message go(value : Integer) returns () {
      local bit_counter : Actor := new BitCounter();
      local answer : Integer;
      answer := bit_counter.count_bits(value);
      emit "the answer is";
      emit answer; # debug output to console
   };
};
